#ifndef _REQUEST
#define _REQUEST 1

#include "../Common/user.h"
#include "../Common/msg.h"

/**
 *  request_names - запрашивает у сервера список имён
 *
 *  pid:            Идентификатор процесса.
 *  name:           Имя пользователя.
 *  qfd_in_names:   Дескриптор очереди ввода имён.
 *  qfd_out:        Дескриптор очереди вывода.
 *  clients:        Список имён.
 *
 *  Эта функция отправляет серверу сообщение типа msg_common с нулевой
 *  нагрузкой и соответствующим приоритетом, ожидает сообщение
 *  типа msg_service_names, и заполняет общий список имён. По запросу списка
 *  имён сервер идентифицирует нового пользователя, в связи с чем
 *  предполагается, что функция будет вызвана только в начале работы приложения
 *  и только один раз.
*/
void request_names(long pid, char *name, int qfd_in_names, int qfd_out,
                   user *clients);

/**
 *  request_messages - запрашивает у сервера список сообщений
 *
 *  pid:            Идентификатор процесса.
 *  name:           Имя пользователя.
 *  qfd_in_msg:     Дескриптор очереди ввода сообщений.
 *  qfd_out:        Дескриптор очереди вывода.
 *  messages:       Список сообщений.
 *
 *  Эта функция отправляет серверу сообщение типа msg_common с нулевой
 *  нагрузкой и соответствующим приоритетом, ожидает сообщение
 *  типа msg_service_list, и заполняет общий список сообщений. Предполагается,
 *  что функция будет вызвана в начале работы приложения для первоначального
 *  заполнения списков, когда на сервере уже есть данные.
*/
void request_messages(long pid, char *name, int qfd_in_msg, int qfd_out,
                      msg_common *messages);

#endif
